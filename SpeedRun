-- Free
-- Load UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/x2zu/OPEN-SOURCE-UI-ROBLOX/refs/heads/main/X2ZU%20UI%20ROBLOX%20OPEN%20SOURCE/DummyUi-leak-by-x2zu/fetching-main/Tools/Framework.luau"))()
local NotificationLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/IceMinisterq/Notification-Library/Main/Library.lua"))()

-- Create Main Window
local Window = Library:Window({
    Title = "PLANG HUB",
    Desc = "[ Tower of Zombies ]",
    Icon = nil,
    Theme = "Dark",
    Config = {
        Keybind = Enum.KeyCode.RightControl,
        Size = UDim2.new(0, 500, 0, 400)
    },
    CloseUIButton = {
        Enabled = true,
        Text = "ToggleUI"
    }
})

local ConfigSystem = loadstring(game:HttpGet("https://raw.githubusercontent.com/ilikeCatexe/All-script/refs/heads/main/ConfigSave%26Load-Module"))()
_G.Config = {
    ["MultiGunShot"] = {
        ["Enabled"] = false,
        ["GunShotAmount"] = 1,
    },
    ["MultiMeleeHit"] = {
        ["Enabled"] = false,
        ["MeleeHitsAmount"] = 5,
    },

    ["NoLavaDamage"] = false,
    ["AutoCheckpoint"] = false,
    ["InfiniteJump"] = false,
    ["InstantProximityPrompts"] = false,

    ["ZHBox"] = {
        ["Active"] = false,
        ["Visualizer"] = false,
        ["ZSize"] = 5,
        ["Part"] = "Head"
    },
}

LoadConfig("PLANGHUB-Config/TowerofZombies.json", "Config", _G.Config)

NotificationLibrary:SendNotification("Info", "i making this script less than 1 hour so.. there may be bugs. a lots", 10)
NotificationLibrary:SendNotification("Info", "So... happy hacking~", 10)

-- Sidebar Vertical Separator
local SidebarLine = Instance.new("Frame")
SidebarLine.Size = UDim2.new(0, 1, 1, 0)
SidebarLine.Position = UDim2.new(0, 140, 0, 0) -- adjust if needed
SidebarLine.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
SidebarLine.BorderSizePixel = 0
SidebarLine.ZIndex = 5
SidebarLine.Name = "SidebarLine"
SidebarLine.Parent = game:GetService("CoreGui") -- Or Window.Gui if accessible

local Tab = Window:Tab({Title = "LocalPlayer", Icon = "book-user"}) do
    Tab:Section({Title = "Weapons"})

    Tab:Textbox({
        Title = "Gun-Shot Amount",
        Desc = "Dupe Amount of gun shots will fire after fire any gun",
        Placeholder = "Enter Amount",
        Value = _G.Config.MultiGunShot.GunShotAmount or 1,
        ClearTextOnFocus = false,
        Callback = function(value)
            if tonumber(value) then
                _G.Config.MultiGunShot.GunShotAmount = value
            else
                NotificationLibrary:SendNotification("Error", "Invalid input. Please enter a valid number.", 7)
            end
        end
    })
    Tab:Textbox({
        Title = "Melee-Hit Amount",
        Desc = "Dupe Amount of melee hits will dupe after use any melee weapon",
        Placeholder = "Enter Amount",
        Value = _G.Config.MultiMeleeHit.MeleeHitsAmount or 5,
        ClearTextOnFocus = false,
        Callback = function(value)
            if tonumber(value) then
                _G.Config.MultiMeleeHit.MeleeHitsAmount = value
            else
                NotificationLibrary:SendNotification("Error", "Invalid input. Please enter a valid number.", 7)
            end
        end
    })

    Tab:Toggle({
        Title = "Multi Gun-Shot",
        Desc = "fire multiple gun-shots after you shoot any gun, Adding More Damage (Ammo Still Decrease)",
        Value = _G.Config.MultiGunShot.Enabled or false,
        Callback = function(v)
            _G.Config.MultiGunShot.Enabled = v
        end
    })
    Tab:Toggle({
        Title = "Multi Melee-Hit (Work sometime)",
        Desc = "dupe multiple melee hits after you use any melee weapon, Adding More Damage",
        Value = _G.Config.MultiMeleeHit.Enabled or false,
        Callback = function(v)
            _G.Config.MultiMeleeHit.Enabled = v
        end
    })

    Tab:Section({Title = "Character"})

    Tab:Toggle({
        Title = "Auto Checkpoint",
        Desc = "this will auto touch the checkpoint for you, This Dosen't work if that place have barricade",
        Value = _G.Config.AutoCheckpoint or false,
        Callback = function(v)
            _G.Config.AutoCheckpoint = v
        end
    })

    Tab:Toggle({
        Title = "No Lava Damage",
        Desc = "prevent you from taking damage from lava",
        Value = _G.Config.NoLavaDamage or false,
        Callback = function(v)
            _G.Config.NoLavaDamage = v
        end
    })

    Tab:Toggle({
        Title = "Infinite Jump",
        Desc = "allow you to jump infinitely",
        Value = _G.Config.InfiniteJump or false,
        Callback = function(v)
            _G.Config.InfiniteJump = v
        end
    })

    Tab:Section({Title = "Miscellaneous"})

    Tab:Toggle({
        Title = "Instant ProximityPrompts",
        Desc = "Instantly activates proximity prompts when interacted with",
        Value = _G.Config.InstantProximityPrompts or false,
        Callback = function(v)
            _G.Config.InstantProximityPrompts = v
        end
    })
    Tab:Button({
        Title = "Load Infinite Yield",
        Desc = "Loads the Infinite Yield admin commands script",
        Callback = function()
            loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
        end
    })

    Tab:Section({Title = "Teleport"})

    for i,v in pairs(game:GetService("Players"):GetPlayers()) do
        if v.Name ~= game.Players.LocalPlayer.Name then
            plr = plr or {}
            table.insert(plr, v.Name)
        end
    end

    local SelectPlayer
    Tab:Dropdown({
        Title = "Select Player",
        List = plr,
        Value = plr,
        Callback = function(choice)
            SelectPlayer = choice
        end
    })

    Tab:Button({
        Title = "Teleport to Selected Player",
        Desc = "Instantly teleport you to the selected player",
        Callback = function()
            local player = game.Players:FindFirstChild(SelectPlayer)
            if player and player.Character then
                game.Players.LocalPlayer.Character.HumanoidRootPart.Position = player.Character.HumanoidRootPart.Position
            end
        end
    })

    Tab:Button({
        Title = "Teleport to The Top",
        Desc = "Instantly teleport you to the top (the end/boss room) of the map",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.Position = workspace.AwaitingBosses.Boss.Position + Vector3.new(0,1,0)
        end
    })
end

local Tab = Window:Tab({Title = "Zombies", Icon = "skull"}) do
    Tab:Section({Title = "Hitbox Expander"})
    Tab:Dropdown({
        Title = "Select Hitbox",
        List = {"Head", "Torso"},
        Value = _G.Config.ZHBox.Part or "Head",
        Callback = function(choice)
            _G.Config.ZHBox.Part = choice
        end
    })
    Tab:Slider({
        Title = "Hitbox Size",
        Desc = "Adjust the size of the hitbox for easier targeting",
        Min = 10,
        Max = 100,
        Rounding = 1,
        Value = _G.Config.ZHBox.ZSize or 5,
        Callback = function(val)
            _G.Config.ZHBox.ZSize = val
        end
    })
    Tab:Toggle({
        Title = "Zombie Hitbox Expander",
        Desc = "expand the hitbox for easier targeting",
        Value = _G.Config.ZHBox.Active or false,
        Callback = function(v)
            _G.Config.ZHBox.Active = v
        end
    })
    Tab:Toggle({
        Title = "Visualizer Hitbox",
        Desc = "visualize the hitbox for easier targeting",
        Value = _G.Config.ZHBox.Visualizer or false,
        Callback = function(v)
            _G.Config.ZHBox.Visualizer = v
        end
    })
end

_G.checks = {Fire=true, Melee=true}
local xd
xd = hookmetamethod(game, "__namecall", function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    local strSelf = tostring(self)

    -- Multi Gun Shot
    if method == "FireServer" and strSelf == "Fire" and _G.Config.MultiGunShot.Enabled and _G.checks.Fire then
        _G.checks.Fire = false
        pcall(function()
            for i = 1, _G.Config.MultiGunShot.GunShotAmount do
                task.spawn(function()
                    task.wait(0.0001) -- slightly higher wait to prevent overload
                    self:FireServer(unpack(args))
                end)
            end
        end)
        task.delay(0.01, function()
            _G.checks.Fire = true
        end)
    elseif method == "FireServer" and strSelf == "MeleeRequest" and _G.Config.MultiMeleeHit.Enabled and _G.checks.Melee then
        _G.checks.Melee = false
        pcall(function()
            for i = 1, _G.Config.MultiMeleeHit.MeleeHitsAmount do
                task.spawn(function()
                    task.wait(0.0001) -- slightly higher wait to prevent overload
                    self:FireServer(unpack(args))
                end)
            end
        end)
        task.delay(0.01, function()
            _G.checks.Melee = true
        end)
    end

    return xd(self, ...)
end)

local canJump = true
game:GetService("UserInputService").JumpRequest:Connect(function()
	if _G.Config.InfiniteJump and canJump then
		canJump = false
		local character = game.Players.LocalPlayer.Character
		if character then
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end
		end
		task.delay(0.01, function()
			canJump = true
		end)
	end
end)

game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
    if _G.Config.InstantProximityPrompts then
        fireproximityprompt(prompt)
    end
end)

task.spawn(function()
    task.defer(function()
        while task.wait() do
            pcall(function()
                if _G.Config.ZHBox.Active then
                    for i,v in pairs(workspace.ActiveZombies:GetChildren()) do
                        if _G.Config.ZHBox.Part == "Head" then
                            if v:FindFirstChild("HeadHitbox") then
                                local HeadHitbox = v:FindFirstChild("HeadHitbox")
                                HeadHitbox.Size = Vector3.new(_G.Config.ZHBox.ZSize,_G.Config.ZHBox.ZSize,_G.Config.ZHBox.ZSize)
                                HeadHitbox.Shape = "Ball"
                                if _G.Config.ZHBox.Visualizer then
                                    HeadHitbox.Transparency = 0.9
                                    HeadHitbox.BrickColor = BrickColor.new("Bright red")
                                end
                            end
                        elseif _G.Config.ZHBox.Part == "Torso" then
                            if v:FindFirstChild("ChestHitbox") then
                                local ChestHitbox = v:FindFirstChild("ChestHitbox")
                                ChestHitbox.Size = Vector3.new(_G.Config.ZHBox.ZSize,_G.Config.ZHBox.ZSize,_G.Config.ZHBox.ZSize)
                                ChestHitbox.Shape = "Block"
                                if _G.Config.ZHBox.Visualizer then
                                    ChestHitbox.Transparency = 0.9
                                    ChestHitbox.BrickColor = BrickColor.new("Bright red")
                                end
                            end
                        end
                    end
                end
            end)
        end
    end)
    task.defer(function()
        while task.wait(0.1) do
            pcall(function()
                for i,v in pairs(workspace.TouchLava:GetChildren()) do
                    v.CanTouch = not _G.Config.NoLavaDamage
                end
                if _G.Config.AutoCheckpoint then
                    for i,v in pairs(workspace.Checkpoints:GetChildren()) do
                        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                    end
                end
            end)
        end
    end)
end)

while task.wait(10) do
    pcall(function()
        SaveConfig("PLANGHUB-Config/TowerofZombies.json", "Config")
    end)
end

